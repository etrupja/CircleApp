@inject NavigationManager NavigationManager
@inject IStoriesService StoriesService

<EditForm Model="storyVM" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="hidden lg:p-20" id="create-story" uk-modal="">
        <div class="uk-modal-dialog tt relative overflow-hidden mx-auto bg-white p-7 shadow-xl rounded-lg md:w-[520px] w-full">
            <div class="text-center py-3 border-b -m-7 mb-0 dark:border-slate-700">
                <h2 class="text-sm font-medium">Create Story</h2>
                <button type="button" class="button__ico absolute top-0 right-0 m-2.5 uk-modal-close">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>

            <div class="space-y-5 mt-7">
                <div>
                    <div class="w-full h-72 relative border1 rounded-lg overflow-hidden bg-[url('../images/ad_pattern.png')] bg-repeat">
                        <label class="flex flex-col justify-center items-center absolute -translate-x-1/2 left-1/2 bottom-0 z-10 w-full pb-6 pt-10 cursor-pointer bg-gradient-to-t from-gray-700/60">
                            <InputFile id="storyUpload" class="hidden" OnChange="HandleImageUpload" />
                            <ion-icon name="image" class="text-3xl text-teal-600"></ion-icon>
                            <span id="storyUploadBtn" class="text-white mt-2">Browse to Upload image</span>
                        </label>
                        <img id="storyPreview" />
                    </div>
                </div>
                <div class="flex justify-between items-center">
                    <div class="flex items-start gap-2">
                        <ion-icon name="time-outline" class="text-3xl text-teal-600 rounded-full bg-blue-50"></ion-icon>
                        <p class="text-sm text-gray-500 font-medium">Your story will be available <br /> for <span class="text-gray-800">24 Hours</span></p>
                    </div>
                    <button type="submit" class="button bg-blue-500 text-white px-8">Create</button>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    private StoryVM storyVM = new StoryVM();

    private async Task HandleValidSubmit()
    {
        var loggedInUserId = int.Parse(User.FindFirstValue(ClaimTypes.NameIdentifier));
        var newStory = new Story
        {
            ImageUrl = storyVM.ImageUrl,
            DateCreated = DateTime.UtcNow,
            UserId = loggedInUserId
        };

        await StoriesService.CreateStoryAsync(newStory);
        NavigationManager.NavigateTo("/");
    }

    private async Task HandleImageUpload(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            var reader = new FileReader();
            var storyPreview = document.getElementById("storyPreview");

            reader.onload = (e) =>
            {
                storyPreview.src = e.target.result;
            };
            reader.readAsDataURL(file);
        }
    }
}
