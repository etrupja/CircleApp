@model List<UserWithFriendsCountVM>
<div class="flex items-baseline justify-between text-black">
    <h3 class="font-bold text-base"> People you may know </h3>
</div>

<div class="side-list">
    @foreach (var user in Model)
    {
        <div class="side-list-item">
            <a asp-controller="Users" asp-action="Details" asp-route-userId="1">
                <img src="@(string.IsNullOrEmpty(user.ProfilePictureUrl) ? Url.Content("~/images/avatar/user.png") : Url.Content("~/"+user.ProfilePictureUrl))" class="side-list-image rounded-full" />
            </a>
            <div class="flex-1">
                <a>
                    <h4 class="side-list-title">
                        @user.FullName
                    </h4>
                </a>
                <div class="side-list-info">@user.FriendsCountDisplay</div>
            </div>
            @*<form>
                <button type="submit" class="button bg-primary-soft text-primary">Follow</button>
            </form>*@

        <form class="follow-form" data-user-id="@user.UserId">
            @Html.AntiForgeryToken()
            <input type="hidden" name="receiverId" value="@user.UserId" />
            <button type="submit" class="button bg-primary-soft text-primary">Follow</button>
        </form>
        </div>
    }

</div>

<script>document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.follow-form').forEach(function (form) {
            form.addEventListener('submit', function (event) {
                event.preventDefault(); // Prevent full page reload
                var formData = new FormData(form);

                fetch('/Friends/SendFriendRequest', {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest' // Mark as AJAX request
                    }
                })
                .then(response => {
                    if (response.ok) {
                        // Refresh the SuggestedFriends view component
                        fetch('/Friends/SuggestedFriends')
                            .then(response => response.text())
                            .then(html => {
                                document.querySelector('.side-list').innerHTML = html;
                            })
                            .catch(error => console.error('Error refreshing view component:', error));
                    } else {
                        console.error('Failed to send friend request');
                    }
                })
                .catch(error => console.error('Error during request:', error));
            });
        });
    });</script>